openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: |-
    Ini adalah contoh dokumentasi API menggunakan OpenAPI 3.0 dan Swagger UI. Disini dibuatkan dokumentasi API untuk aplikasi Wegotour yang dibuat menggunakan Go-lang dan Cloud Function.

    Untuk informasi lebih lanjut, kunjungi website kami di [Website Wegotour](https://wegotour.my.id/).

  termsOfService: https://github.com/wegotour/swagger
  contact:
    email: daffaaudyapramana03@gmail.com
  license:
    name: Wegotour Package
    url: https://pkg.go.dev/github.com/wegotour/be_p3
  version: 0.0.4
externalDocs:
  description: Repo GCF
  url: https://wegotour.github.io/cloudfunction_wegotour/
servers:
  - url: https://asia-southeast2-wegotour-403712.cloudfunctions.net/
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/wegotour/PasetoBackend
  - name: register
    description: Register Account
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/wegotour/PasetoBackend
  - name: data
    description: Data Untuk akses user
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/wegotour/PasetoBackend
  - name: update
    description: Update Data
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/wegotour/PasetoBackend
  - delete: delete
    description: Delete Data
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/wegotour/PasetoBackend

paths:

  /wegotour:
    get:
      tags:
        - data
      summary: Get all ticket
      description: Get All Ticket
      operationId: getAllTicket
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTicketResponse'

  /wegotourgetalluser:
    get:
      tags:
        - data
      summary: Get all user without token
      description: Header Auth
      operationId: getdataallUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllDataResponse'          
        '400':
          description: Invalid username supplied
        '404':
          description: User not found

  /wegotour-registeradmin:
    post:
      tags:
        - register
      summary: Register User without token
      description: Register User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '405':
          description: Invalid input

  /wegotourchangepassworduser:
    put:
      tags:
        - update
      summary: Change Password with token
      description: Change Password
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassResponse'
        '405':
          description: Invalid input
      security:
        - Login:
          - write:apiKey
          - read:apiKey

 /wegotourdeletedataticket:
    delete:
      tags:
        - delete
      summary: Delete ticket with token
      description: Delete Ticket
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTicketResponse'
        '405':
          description: Invalid input
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /wegotourloginadminbaru:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /insertdataticket:
    post:
      tags:
        - ticket
      summary: Post Ticket
      description: Insert Ticket
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertDataResponse'
        '405':
          description: Invalid input
      security:
        - Login:
          - write:apiKey
          - read:apiKey

components:
  schemas:

    User:
      type: object
      properties:
        email:
          type: string
          example: 
        username:
          type: string
          example: 
        password:
          type: string
          example: 

    GetTicketResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          $ref: "#/components/schemas/Auth"

    GetAllDataResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          $ref: "#/components/schemas/Auth"

    UpdatePenggunaResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: successful operation

    RegisterResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: user berhasil terdaftar

    Ticket:
      type: object
      properties:
        nomorid:
          type: string
          example: 20
        title:
          type: string
          example: Gunung Rinjani
        description:
          type: string
          example: Gunungnya ada di Lombok
        image:
          type: string
          example: https://images3.alphacoders.com/165/thumb-1920-165265.jpg

    DeleteTicketResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: berhasil delete data
        data:
          $ref: "#/components/schemas/Auth"

    InsertDataResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: successful operation

    ChangePassResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: successful operation

    Auth:
      type: object
      properties:
        email:
          type: string
          example: prisyahaura@gmail.com
        password:
          type: string
          example: picaw

    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: dapa

  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'

    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'

  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header